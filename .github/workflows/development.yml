name: CICDDemo development workflow

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  build:

    runs-on: windows-latest
    env:
      SERVER_NAME: ${{ secrets.SERVER_NAME }}
      WEBSITE_NAME: ${{ secrets.WEBSITE_NAME }}
      USERNAME: ${{ secrets.IIS_SERVER_USERNAME }}
      PASSWORD: ${{ secrets.IIS_SERVER_PASSWORD }}
      CONTENT_PATH: ${{ secrets.WEBSITE_CONTENT_PATH }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Debug --no-restore
    - name: dotnet publish
      run: dotnet publish --configuration Debug
    - name: Upload dotnet publish Artifact
      uses: actions/upload-artifact@v2
      with:
          name: CICDDemo dev publish folder
          path: CICDDemo/bin/Debug/netcoreapp3.1/publish/
    - name: Stop Application
      shell: cmd
      run: '"C:/Program Files/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -AllowUntrustedCertificate=True -source:recycleApp -dest:recycleApp="${{ env.WEBSITE_NAME }}",computerName="${{ env.SERVER_NAME }},recycleMode="StopAppPool",authType="basic",username="${{ env.USERNAME }}",password="${{ env.PASSWORD }}"'
    - name: Deploy Application
      shell: cmd
      run: '"C:/Program Files/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -useCheckSum -allowUntrusted -source:contentPath="CICDDemo/bin/Debug/netcoreapp3.1/publish/" -dest:contentPath="${{ env.CONTENT_PATH }}",computerName="${{ env.SERVER_NAME }}/msdeploy.axd?site=${{ env.WEBSITE_NAME }}",username="${{ env.USERNAME }}",password="${{ env.PASSWORD }}"'
    - name: Start Application
      shell: cmd
      run: '"C:/Program Files/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -source:recycleApp -dest:recycleApp="${{ env.WEBSITE_NAME }}",recycleMode="StartAppPool",computerName="${{ env.SERVER_NAME }}/msdeploy.axd?site=${{ env.WEBSITE_NAME }}",username="${{ env.USERNAME }}",password="${{ env.PASSWORD }}"'
  
